// Generated by Dagger (https://dagger.dev).
package com.example.shoppingapp.viewmodel;

import android.app.Application;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.storage.StorageReference;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class UserViewModel_Factory implements Factory<UserViewModel> {
  private final Provider<FirebaseFirestore> firestoreProvider;

  private final Provider<FirebaseAuth> firebaseAuthProvider;

  private final Provider<Application> applicationProvider;

  private final Provider<StorageReference> storageProvider;

  public UserViewModel_Factory(Provider<FirebaseFirestore> firestoreProvider,
      Provider<FirebaseAuth> firebaseAuthProvider, Provider<Application> applicationProvider,
      Provider<StorageReference> storageProvider) {
    this.firestoreProvider = firestoreProvider;
    this.firebaseAuthProvider = firebaseAuthProvider;
    this.applicationProvider = applicationProvider;
    this.storageProvider = storageProvider;
  }

  @Override
  public UserViewModel get() {
    return newInstance(firestoreProvider.get(), firebaseAuthProvider.get(), applicationProvider.get(), storageProvider.get());
  }

  public static UserViewModel_Factory create(Provider<FirebaseFirestore> firestoreProvider,
      Provider<FirebaseAuth> firebaseAuthProvider, Provider<Application> applicationProvider,
      Provider<StorageReference> storageProvider) {
    return new UserViewModel_Factory(firestoreProvider, firebaseAuthProvider, applicationProvider, storageProvider);
  }

  public static UserViewModel newInstance(FirebaseFirestore firestore, FirebaseAuth firebaseAuth,
      Application application, StorageReference storage) {
    return new UserViewModel(firestore, firebaseAuth, application, storage);
  }
}
