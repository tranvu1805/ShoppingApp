// Generated by Dagger (https://dagger.dev).
package com.example.shoppingapp.viewmodel;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RegisterViewModel_Factory implements Factory<RegisterViewModel> {
  private final Provider<FirebaseAuth> firebaseAuthProvider;

  private final Provider<FirebaseFirestore> firebaseFireStoreProvider;

  public RegisterViewModel_Factory(Provider<FirebaseAuth> firebaseAuthProvider,
      Provider<FirebaseFirestore> firebaseFireStoreProvider) {
    this.firebaseAuthProvider = firebaseAuthProvider;
    this.firebaseFireStoreProvider = firebaseFireStoreProvider;
  }

  @Override
  public RegisterViewModel get() {
    return newInstance(firebaseAuthProvider.get(), firebaseFireStoreProvider.get());
  }

  public static RegisterViewModel_Factory create(Provider<FirebaseAuth> firebaseAuthProvider,
      Provider<FirebaseFirestore> firebaseFireStoreProvider) {
    return new RegisterViewModel_Factory(firebaseAuthProvider, firebaseFireStoreProvider);
  }

  public static RegisterViewModel newInstance(FirebaseAuth firebaseAuth,
      FirebaseFirestore firebaseFireStore) {
    return new RegisterViewModel(firebaseAuth, firebaseFireStore);
  }
}
