// Generated by Dagger (https://dagger.dev).
package com.example.shoppingapp.viewmodel;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AddressViewModel_Factory implements Factory<AddressViewModel> {
  private final Provider<FirebaseFirestore> fireStoreProvider;

  private final Provider<FirebaseAuth> authProvider;

  public AddressViewModel_Factory(Provider<FirebaseFirestore> fireStoreProvider,
      Provider<FirebaseAuth> authProvider) {
    this.fireStoreProvider = fireStoreProvider;
    this.authProvider = authProvider;
  }

  @Override
  public AddressViewModel get() {
    return newInstance(fireStoreProvider.get(), authProvider.get());
  }

  public static AddressViewModel_Factory create(Provider<FirebaseFirestore> fireStoreProvider,
      Provider<FirebaseAuth> authProvider) {
    return new AddressViewModel_Factory(fireStoreProvider, authProvider);
  }

  public static AddressViewModel newInstance(FirebaseFirestore fireStore, FirebaseAuth auth) {
    return new AddressViewModel(fireStore, auth);
  }
}
