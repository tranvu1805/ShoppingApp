// Generated by Dagger (https://dagger.dev).
package com.example.shoppingapp.dependenceinjection;

import com.example.shoppingapp.firebase.FirebaseUtils;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideFirebaseUtilsFactory implements Factory<FirebaseUtils> {
  private final Provider<FirebaseFirestore> fireStoreProvider;

  private final Provider<FirebaseAuth> authProvider;

  public AppModule_ProvideFirebaseUtilsFactory(Provider<FirebaseFirestore> fireStoreProvider,
      Provider<FirebaseAuth> authProvider) {
    this.fireStoreProvider = fireStoreProvider;
    this.authProvider = authProvider;
  }

  @Override
  public FirebaseUtils get() {
    return provideFirebaseUtils(fireStoreProvider.get(), authProvider.get());
  }

  public static AppModule_ProvideFirebaseUtilsFactory create(
      Provider<FirebaseFirestore> fireStoreProvider, Provider<FirebaseAuth> authProvider) {
    return new AppModule_ProvideFirebaseUtilsFactory(fireStoreProvider, authProvider);
  }

  public static FirebaseUtils provideFirebaseUtils(FirebaseFirestore fireStore, FirebaseAuth auth) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideFirebaseUtils(fireStore, auth));
  }
}
